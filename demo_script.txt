# =============================================================================
#           מדריך פקודות להדגמה חיה - OpenShift Data Loader
# =============================================================================

# -------------------------
# שלב 0: הכנות
# -------------------------

# התחברות ל-OpenShift (בצע לפני ההדגמה)
oc login --token=<your-token> --server=<your-server-url>

# יצירת פרויקט חדש ונקי
oc new-project my-live-demo

# התחברות ל-Docker Hub (בצע לפני ההדגמה)
docker login


# -------------------------
# שלב 1: בניית Docker Image
# -------------------------

# החלף את <your-dockerhub-username> בשם המשתמש שלך
docker build -t <your-dockerhub-username>/data-loader-service:manual-demo .
docker push <your-dockerhub-username>/data-loader-service:manual-demo


# -------------------------
# שלב 2: יצירת Secret לסיסמאות
# -------------------------

# שיטה א' (דקלרטיבית - YAML)
oc apply -f infrastructure/k8s/01-mysql-secret.yaml

# שיטה ב' (אימפרטיבית - פקודה ישירה)
# oc create secret generic mysql-db-credentials \
#   --from-literal=MYSQL_ROOT_PASSWORD='kjytfcryegbfy8679hcsrdfgcvdu' \
#   --from-literal=MYSQL_DATABASE='mydatabase' \
#   --from-literal=MYSQL_USER='myuser' \
#   --from-literal=MYSQL_PASSWORD='ghjsdcbxyf67rgevtc76'

# בדיקה שה-Secret נוצר
oc get secret mysql-db-credentials -o yaml


# -------------------------
# שלב 3: יצירת אחסון קבוע (PVC)
# -------------------------

oc apply -f infrastructure/k8s/02-mysql-pvc.yaml

# בדיקה שה-PVC נוצר ובמצב 'Bound'
oc get pvc


# -------------------------
# שלב 4: פריסת MySQL (Deployment + Service)
# -------------------------

# שיטה א' (דקלרטיבית - YAML)
oc apply -f infrastructure/k8s/03-mysql-deployment.yaml
oc apply -f infrastructure/k8s/04-mysql-service.yaml

# שיטה ב' (אימפרטיבית - oc new-app)
# oc new-app mysql:8.0 --name=mysql-db
# oc set env deployment/mysql-db --from=secret/mysql-db-credentials
# oc set volume deployment/mysql-db --add --name=mysql-persistent-storage --type=persistentVolumeClaim --claim-name=mysql-db-pvc --mount-path=/var/lib/mysql

# המתנה לסיום הפריסה
echo "Waiting for MySQL pod to be ready..."
oc wait --for=condition=ready pod -l app=mysql-db --timeout=300s
echo "MySQL is ready!"


# -------------------------
# שלב 5: פריסת אפליקציית FastAPI
# -------------------------

# החלף את <your-dockerhub-username> בשם המשתמש שלך לפני הרצת הפקודה
sed -e "s|YOUR_DOCKERHUB_USERNAME|<your-dockerhub-username>|g" \
    -e "s|:latest|:manual-demo|g" \
    "infrastructure/k8s/05-fastapi-deployment.yaml" | oc apply -f -

oc apply -f infrastructure/k8s/06-fastapi-service.yaml

# המתנה לסיום הפריסה
echo "Waiting for FastAPI pod to be ready..."
oc wait --for=condition=ready pod -l app=mysql-api --timeout=300s
echo "FastAPI is ready!"


# -------------------------
# שלב 6: אתחול הנתונים ב-DB
# -------------------------

# מציאת שם ה-Pod
MYSQL_POD=$(oc get pod -l app=mysql-db -o jsonpath='{.items[0].metadata.name}')
echo "Found MySQL Pod: $MYSQL_POD"

# העתקת קבצי SQL לתוך ה-Pod
oc cp scripts/create_data.sql "$MYSQL_POD":/tmp/create_data.sql
oc cp scripts/insert_data.sql "$MYSQL_POD":/tmp/insert_data.sql

# שליפת הסיסמה מה-Secret
MYSQL_PASSWORD=$(oc get secret mysql-db-credentials -o jsonpath='{.data.MYSQL_ROOT_PASSWORD}' | base64 --decode)

# הרצת הסקריפטים בתוך ה-Pod
oc exec "$MYSQL_POD" -- mysql -u root -p"$MYSQL_PASSWORD" mydatabase < scripts/create_data.sql
oc exec "$MYSQL_POD" -- mysql -u root -p"$MYSQL_PASSWORD" mydatabase < scripts/insert_data.sql
echo "Database initialized successfully!"


# -------------------------
# שלב 7: חשיפת האפליקציה (Route)
# -------------------------

# שיטה א' (דקלרטיבית - YAML)
oc apply -f infrastructure/k8s/07-fastapi-route.yaml

# שיטה ב' (אימפרטיבית - oc expose)
# oc expose service mysql-api-service --name=mysql-api-route-imperative

# מציאת הכתובת ובדיקה
ROUTE_URL=$(oc get route mysql-api-route -o jsonpath='{.spec.host}')
echo "======================================================"
echo "Application URL: http://${ROUTE_URL}"
echo "Data Endpoint:   http://${ROUTE_URL}/data"
echo "API Docs:        http://${ROUTE_URL}/docs"
echo "======================================================"


# -------------------------
# שלב 8: ניקוי הסביבה (בסוף ההדגמה)
# -------------------------

oc delete all --selector=app=mysql-api
oc delete all --selector=app=mysql-db
oc delete pvc mysql-db-pvc
oc delete secret mysql-db-credentials

# או בקיצור:
# oc delete -f infrastructure/k8s/